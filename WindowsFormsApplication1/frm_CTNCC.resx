<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>